{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TMDBService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.nodeEndpoint = 'http://localhost:3000/';\n  }\n  getMovieSearchResults(search) {\n    console.log('Sending Request to Backend');\n    return this.httpClient.post(this.nodeEndpoint, {\n      search: search\n    }, this.httpOptions);\n  }\n}\nTMDBService.ɵfac = function TMDBService_Factory(t) {\n  return new (t || TMDBService)(i0.ɵɵinject(i1.HttpClient));\n};\nTMDBService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TMDBService,\n  factory: TMDBService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAO5D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAJ9B,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IACD,iBAAY,GAAG,wBAAwB;EACO;EAC9CK,qBAAqB,CAACC,MAAc;IAClCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAW,IAAI,CAACC,YAAY,EAAE;MAACJ,MAAM,EAAEA;IAAM,CAAC,EAAE,IAAI,CAACK,WAAW,CAAC;EAC9F;;AATWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["HttpHeaders","TMDBService","constructor","httpClient","headers","getMovieSearchResults","search","console","log","post","nodeEndpoint","httpOptions","factory","providedIn"],"sourceRoot":"","sources":["/Users/araceli/Desktop/PS7-frontend/src/app/services/tmdb.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Response} from \"../interfaces/Search\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TMDBService {\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n  nodeEndpoint = 'http://localhost:3000/';\n  constructor(private httpClient: HttpClient) { }\n  getMovieSearchResults(search: string): Observable<Response> {\n    console.log('Sending Request to Backend')\n    return this.httpClient.post<Response>(this.nodeEndpoint, {search: search}, this.httpOptions);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}